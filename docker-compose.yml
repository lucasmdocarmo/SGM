version: '3.4'

services:
  sgm.events.api:
    image: ${DOCKER_REGISTRY-}sgmeventsapi
    build:
      context: .
      dockerfile: SGM.Events.API/Dockerfile
  sgm.consumer.api:
    image: ${DOCKER_REGISTRY-}sgmeventsconsumer
    build:
      context: .
      dockerfile: SGM.Events.Consumer/Dockerfile
  sgm.cidadao.api:
    image: ${DOCKER_REGISTRY-}sgmcidadaoapi
    build:
      context: .
      dockerfile: SGM.Cidadao.API/Dockerfile
    depends_on:
      - db
    networks:
      - dockersql-network
  db:
    container_name: dockersql.database
    image: "mcr.microsoft.com/mssql/server:2019-latest"
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=SGM123456
    ports:
      - "5434:1433"
    networks:
      - dockersql-network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    networks: 
      - broker-kafka
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    networks: 
      - broker-kafka
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 127.0.0.1
      KAFKA_CREATE_TOPICS: "cidadao_topic:1:1"
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      

  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    networks: 
      - broker-kafka
    depends_on:
      - kafka
    ports:
      - 19000:9000
    environment:
      KAFKA_BROKERCONNECT: kafka:29092

networks: 
  broker-kafka:
    driver: bridge  
  dockersql-network:
    driver: bridge
